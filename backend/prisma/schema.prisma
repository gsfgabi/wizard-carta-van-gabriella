generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model authorization_letters {
  id                              Int                               @id @unique @default(autoincrement()) @db.SmallInt
  cnpj                            String                            @db.VarChar
  corporate_name                  String                            @db.VarChar
  responsible_person_name         String                            @db.VarChar
  responsible_person_title        String                            @db.VarChar
  responsible_person_cellphone    String                            @db.VarChar
  responsible_person_email        String                            @db.VarChar
  manager_name                    String                            @db.VarChar
  manager_cellphone               String                            @db.VarChar
  manager_email                   String                            @db.VarChar
  branch_number                   String                            @db.VarChar
  branch_dv                       String                            @db.VarChar
  account_number                  String                            @db.VarChar
  account_dv                      String                            @db.VarChar
  agreement_number                String                            @db.VarChar
  id_banks                        Int                               @db.SmallInt
  id_cnabs                        Int                               @db.SmallInt
  created_at                      DateTime                          @db.Timestamptz(6)
  banks                           banks                             @relation(fields: [id_banks], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cnabs                           cnabs                             @relation(fields: [id_cnabs], references: [id], onDelete: NoAction, onUpdate: NoAction)
  authorization_letters_products  authorization_letters_products[]
  authorization_letters_van_types authorization_letters_van_types[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model authorization_letters_products {
  id                       Int                   @id @unique @default(autoincrement()) @db.SmallInt
  id_products              Int                   @db.SmallInt
  id_authorization_letters Int                   @db.SmallInt
  authorization_letters    authorization_letters @relation(fields: [id_authorization_letters], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products                 products              @relation(fields: [id_products], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model banks {
  id                    Int                     @id @unique @default(autoincrement()) @db.SmallInt
  name                  String                  @unique @db.VarChar
  code                  String                  @unique @db.VarChar
  authorization_letters authorization_letters[]
  banks_cnabs           banks_cnabs[]
  banks_products        banks_products[]
  banks_van_types       banks_van_types[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model banks_cnabs {
  id       Int   @id @default(autoincrement()) @db.SmallInt
  id_banks Int   @db.SmallInt
  id_cnabs Int   @db.SmallInt
  banks    banks @relation(fields: [id_banks], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cnabs    cnabs @relation(fields: [id_cnabs], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model banks_products {
  id          Int      @id @unique @default(autoincrement()) @db.SmallInt
  id_products Int      @db.SmallInt
  id_banks    Int      @db.SmallInt
  banks       banks    @relation(fields: [id_banks], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products    products @relation(fields: [id_products], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cnabs {
  id                    Int                     @id(map: "cnab_pkey") @unique(map: "cnab_id_key") @default(autoincrement()) @db.SmallInt
  name                  String                  @db.VarChar
  authorization_letters authorization_letters[]
  banks_cnabs           banks_cnabs[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model products {
  id                             Int                              @id @unique @default(autoincrement()) @db.SmallInt
  name                           String                           @db.VarChar
  description                    String?                          @db.VarChar
  icon                           String?                          @db.VarChar
  authorization_letters_products authorization_letters_products[]
  banks_products                 banks_products[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model authorization_letters_van_types {
  id                       Int                   @id(map: "authorization_letters_type_vans_pkey") @default(autoincrement()) @db.SmallInt
  id_authorization_letters Int                   @db.SmallInt
  id_van_types             Int                   @db.SmallInt
  authorization_letters    authorization_letters @relation(fields: [id_authorization_letters], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "authorization_letters_type_vans_id_authorization_letters_fkey")
  van_types                van_types             @relation(fields: [id_van_types], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "authorization_letters_type_vans_id_van_types_fkey")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model banks_van_types {
  id           Int       @id(map: "banks_type_vans_pkey") @default(autoincrement()) @db.SmallInt
  id_banks     Int       @db.SmallInt
  id_van_types Int       @db.SmallInt
  banks        banks     @relation(fields: [id_banks], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "banks_type_vans_id_banks_fkey")
  van_types    van_types @relation(fields: [id_van_types], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model van_types {
  id                              Int                               @id(map: "type_vans_pkey") @unique(map: "type_vans_id_key") @default(autoincrement()) @db.SmallInt
  type                            String                            @db.VarChar
  authorization_letters_van_types authorization_letters_van_types[]
  banks_van_types                 banks_van_types[]
}
